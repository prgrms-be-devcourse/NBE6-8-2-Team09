name: CI‑Test

on:
  push:
    branches: ["**"]                 # 모든 브랜치
  pull_request:
    branches: [ main, develop ]      # PR 검증
  workflow_dispatch:

jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          # ────────────────────── Ubuntu
          - os: ubuntu-latest
            gradle_cmd: "./gradlew"
            report_path: "backend/build/reports/tests"
            domain_tasks: "testUser testExchange testTrade_log testWallet testCoin"
          # ────────────────────── Windows
          - os: windows-latest
            gradle_cmd: ".\\gradlew.bat"
            report_path: "backend\\build\\reports\\tests"
            domain_tasks: "testUser testExchange testTrade_log testWallet testCoin"
    runs-on: ${{ matrix.os }}

    steps:
    # 1) 소스 체크아웃
    - uses: actions/checkout@v4

    # 2) JDK + Gradle 캐시
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    # (Windows) gradlew.bat 권한 확보
    - name: Grant execute permission to gradlew
      if: matrix.os == 'windows-latest'
      run: icacls backend\\gradlew.bat /grant Everyone:RX
      shell: pwsh

    # 3) **단위 + 통합 + 도메인별 테스트** 한 번에 실행
    - name: Run unit, integration, and domain tests
      run: ${{ matrix.gradle_cmd }} clean test integrationTest ${{ matrix.domain_tasks }}
      working-directory: backend
      

    # 4) 리포트 업로드 (도메인·통합 포함 전체)
    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ matrix.os }}
        path: ${{ matrix.report_path }}    # 하위폴더(testUser 등)까지 전부 포함
        retention-days: 7
