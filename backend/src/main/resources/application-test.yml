spring:
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
    hikari:
      auto-commit: false

  data:
    redis:
      # 테스트에서는 임베디드 Redis나 메모리 사용
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: create-drop

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:test-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:test-client-secret}
            scope: profile, email
            redirect-uri: ${OAUTH2_REDIRECT_URI:http://localhost:8888/oauth2/callback/google}
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

logging:
  level:
    org.hibernate.orm.jdbc.bind: WARN
    org.hibernate.orm.jdbc.extract: WARN
    org.springframework.transaction.interceptor: WARN
    root: WARN

# 테스트용 OAuth2 쿠키 설정
app:
  oauth2:
    cookie-domain: ${OAUTH2_COOKIE_DOMAIN:}
    frontend-url: ${FRONTEND_URL:http://localhost:8888}
  cookie:
    same-site: Lax
    secure: false
    domain: localhost  # 추가: 모든 localhost 포트에서 쿠키 공유