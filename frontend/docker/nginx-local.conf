events {
    worker_connections 1024;
}

http {
    upstream app {
        server host.docker.internal:3000;  # Next.js 개발 서버 (Windows Docker용)
    }

    upstream backend {
        server host.docker.internal:8080;  # Spring Boot 개발 서버 (Windows Docker용)
    }

    server {
        listen 8888;  # 80 대신 8888 포트 사용
        server_name localhost;

        # OAuth2 콜백을 백엔드로 처리 (Google에서 오는 실제 콜백)
        location /oauth2/callback/ {
            proxy_pass             http://backend;
            proxy_http_version     1.1;
            proxy_set_header       Host              $host;
            proxy_set_header       X-Real-IP         $remote_addr;
            proxy_set_header       X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header       X-Forwarded-Proto $scheme;
            proxy_redirect         off;
            # 쿠키 전달 설정 추가
            proxy_cookie_domain    ~^(.*)$ $host;
            proxy_cookie_path      / /;
        }

        # OAuth2 시작 엔드포인트
        location /oauth2/ {
            proxy_pass             http://backend;
            proxy_http_version     1.1;
            proxy_set_header       Host              $host;
            proxy_set_header       X-Real-IP         $remote_addr;
            proxy_set_header       X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header       X-Forwarded-Proto $scheme;
            proxy_redirect         off;
            # 쿠키 전달 설정 추가
            proxy_cookie_domain    ~^(.*)$ $host;
            proxy_cookie_path      / /;
        }

        # 프론트엔드 API 라우트 (성공 후 처리용)
        location /api/auth/google/callback {
            proxy_pass         http://app;
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # API 요청을 백엔드로 프록시
        location /api/ {
            proxy_pass             http://backend;
            proxy_http_version     1.1;
            proxy_set_header       Host              $host;
            proxy_set_header       X-Real-IP         $remote_addr;
            proxy_set_header       X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header       X-Forwarded-Proto $scheme;
            proxy_redirect         off;
        }

        # 프론트엔드로 모든 다른 요청 전달
        location / {
            proxy_pass         http://app;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # 정적 파일 캐싱 (선택사항)
        location /_next/static/ {
            proxy_pass http://app;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /public/ {
            proxy_pass http://app;
            expires 1h;
        }

        # 헬스체크
        location = /healthz {
            return 200 'ok';
            add_header Content-Type text/plain;
        }
    }
}
